conf目录:

1010 1011 11 1110 1113 13 1510 1511

以上均为目录文件,四位的代表节点号(如1010代码苏州人行,1011代表苏州邮储银行),两位的代表银行号(如11代表邮储银行)

地区人行的目录主要存放:

1>同城的交易报文模板并以 tc+平台交易码.xml 命名.
2>同城的报文和平台的报文进行转换时的映射配置文件并以 map+平台交易码.xml 命名.
3>指定接口银行的同城的报文和平台的报文进行转换时的映射配置文件并以 map+银行号+-平台交易码.xml 命名.

地区银行的目录主要存放:

appcfg.xml: 所有交易的应用配置文件
db.xml: 数据库操作的配置文件
dict.xml: 银行的报文元素的字典文件
flow.xml: 流程配置(目前未处理)

银行号的目录主要存放:

bk****.xml: ****为银行接口交易码(位数不定),表示该交易的请求和应答报文
(注:应答报文可根据RESPONSE节点的FLAG不同的属性值配置不同的应答报文,
如交易成功和交易失败时若应答报文格式不同则使用此方法,FLAG的值在通讯协议处理模块CommProtocol中动态返回)
技巧:可以使用不同的行内交易码命名文件在业务逻辑中进行不同意义的调用,但对于行内接口是同一个交易码,
并可用此方法对相同的交易接口在不同的逻辑调用中配置不同的默认值.

map****.xml: ****为银行接口交易码(位数不定),表示该交易接口的请求和应答报文与平台的相应报文的映射配置关系

map??-****.xml: ??表示两位数字的地区号,****表示交易接口交易码,该类命名文件用于指定地区的该银行的该接口的映射关系


op100.xml op200.xml op300.xml op400.xml:
分别为不同交易类别的基本平台报文,如无指定平台交易的指定报文文件则使用相应的该交易对应的基本平台报文.

op101.xml:
表示指定平台交易101的平台报文.

opext10.xml
opext11.xml

opext**.xml:

表示OP交易报文中如果有EXTRA节点的则自动去加载相应的附加信息,**表示为两位数字,表示同城所在的地区号
该文件中有 <BANK ID='10'></BANK> 这样的BANK带ID属性的节点表示该地区中该银行号的附加信息.
即附加信息配置文件各个地区文件名按地区号来区分,里面包含各个银行号的银行内部相关的附加信息.
报文加载时会自动加载同城中所有的附加信息节点和属于该银行节点号的节点下的所有子节点.

如opext11.xml表示南通地区的附加信息配置,兴业银行的交易在加载op100.xml报文时会自动将如下节点集增加到op100.xml中的EXTRA节点下,
<BANK ID="13">
    <opBKEXDrawType/>
    <opBKEXMflag/>
</BANK>
<opPrintFlag/>
<opAcctCheck/>
<opEXBKDrawType/>
<opOppBank/>
<opOppBankName/>
<opOppCustAddr/>
<opOppBankAddr/>

opflow.xml:
流程配置文件,暂时未使用

ophead.xml:
所有平台交易报文的报文头模板

optail.xml:
所有平台交易报文的报文尾模板

